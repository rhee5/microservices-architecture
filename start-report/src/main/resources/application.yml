spring:
  kafka:
#    listener.concurrency: 8 # only if you want multiple of these microservices running
    bootstrap-servers: localhost:9093
    properties:
      security.protocol: "SSL"
      ssl.endpoint.identification.algorithm: ""
    ssl:
      keyStoreLocation: "file:///C:/ ... / location of kafka.keystore.jks"
      keyStorePassword: "put it here"
      trustStoreLocation: "file:///C:/ ... / location of kafka.truststore.jks"
      trustStorePassword: "put it here"
      keyPassword: "put it here"
    consumer:
      auto-offset-reset: earliest
      group-id: report
      bootstrap-servers: localhost:9093 # necessary
    producer:
      bootstrap-servers: localhost:9093
      max-request-size: 3145728
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  jpa:
    properties.hibernate:
      dialect: org.hibernate.dialect.SQLServerDialect
      format_sql: true
    show-sql: true
    hibernate.naming.physical-strategy=org: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

  datasource:
    url: "jdbc:sqlserver://localhost\\FENICS:1433;databaseName=daylights;encrypt=true;trustServerCertificate=true"
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: username
    password: password

  jmx:
    enabled: true

server:
  port: 8081

logging:
  level:
    org.springframework.kafka: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, beans, env, threaddump, loggers  # Expose health and info endpoints
    jmx:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always  # Show details of health checks
    jmx:
      unique-names: true
  health:
    db:
      enabled: true
    kafka:
      enabled: true
